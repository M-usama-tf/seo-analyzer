[{"/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/api/generate-report/route.ts":"1","/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/api/generate-report.ts":"2","/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/layout.tsx":"3","/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/page.tsx":"4","/Users/themacstore/Documents/codes/Techfrontiers/seo/src/components/ui/text-generate-effect.tsx":"5","/Users/themacstore/Documents/codes/Techfrontiers/seo/src/lib/utils.ts":"6"},{"size":5434,"mtime":1733495690288,"results":"7","hashOfConfig":"8"},{"size":2018,"mtime":1733251290404,"results":"9","hashOfConfig":"8"},{"size":742,"mtime":1733246106803,"results":"10","hashOfConfig":"8"},{"size":7517,"mtime":1733351103972,"results":"11","hashOfConfig":"8"},{"size":1386,"mtime":1733350700746,"results":"12","hashOfConfig":"8"},{"size":166,"mtime":1733350194020,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8dvzvs",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/api/generate-report/route.ts",["32","33"],[],"/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/api/generate-report.ts",["34"],[],"/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/layout.tsx",[],[],"/Users/themacstore/Documents/codes/Techfrontiers/seo/src/app/page.tsx",[],[],"/Users/themacstore/Documents/codes/Techfrontiers/seo/src/components/ui/text-generate-effect.tsx",["35","36"],[],"/Users/themacstore/Documents/codes/Techfrontiers/seo/src/lib/utils.ts",[],[],{"ruleId":"37","severity":2,"message":"38","line":13,"column":51,"nodeType":"39","messageId":"40","endLine":13,"endColumn":54,"suggestions":"41"},{"ruleId":"42","severity":2,"message":"43","line":45,"column":32,"nodeType":null,"messageId":"44","endLine":45,"endColumn":38},{"ruleId":"42","severity":2,"message":"43","line":31,"column":32,"nodeType":null,"messageId":"44","endLine":31,"endColumn":38},{"ruleId":"45","severity":2,"message":"46","line":18,"column":7,"nodeType":"47","messageId":"48","endLine":18,"endColumn":17,"fix":"49"},{"ruleId":"50","severity":1,"message":"51","line":31,"column":6,"nodeType":"52","endLine":31,"endColumn":21,"suggestions":"53"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["54","55"],"@typescript-eslint/no-unused-vars","'reject' is defined but never used.","unusedVar","prefer-const","'wordsArray' is never reassigned. Use 'const' instead.","Identifier","useConst",{"range":"56","text":"57"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'animate', 'duration', and 'filter'. Either include them or remove the dependency array. Mutable values like 'scope.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["58"],{"messageId":"59","fix":"60","desc":"61"},{"messageId":"62","fix":"63","desc":"64"},[375,409],"const wordsArray = words.split(\" \");",{"desc":"65","fix":"66"},"suggestUnknown",{"range":"67","text":"68"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"69","text":"70"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [animate, duration, filter]",{"range":"71","text":"72"},[440,443],"unknown",[440,443],"never",[642,657],"[animate, duration, filter]"]